package cdr

// Code generated by kaitai-struct-compiler from TS32_297.ksy source file. DO NOT EDIT.

import (
	"fmt"

	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
)

type ThreegppCdr struct {
	Header *ThreegppCdr_Header
	Cdrs []*ThreegppCdr_Cdr
	_io *kaitai.Stream
	_root *ThreegppCdr
	_parent interface{}
}
func NewThreegppCdr() *ThreegppCdr {
	return &ThreegppCdr{
	}
}

func (this *ThreegppCdr) Read(io *kaitai.Stream, parent interface{}, root *ThreegppCdr) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	hdr := NewThreegppCdr_Header()
	err = hdr.Read(this._io, this, this._root)
	if err != nil {
		return fmt.Errorf("Read CDR File Header error: %s", err)
	}
	this.Header = hdr
	
	for i := 1; i<=int(this.Header.NumberOfCdrsInFile); i++ {
		isEof, err := this._io.EOF()
		if err != nil {
			return fmt.Errorf("EOF error: %s", err)
		}
		if isEof {
			break
		}
		cdr := NewThreegppCdr_Cdr()
		err = cdr.Read(this._io, this, this._root)
		if err != nil {
			return fmt.Errorf("Error reading CDR %d: %s", i, err)
		}
		this.Cdrs = append(this.Cdrs, cdr)
	}
	return err
}
type ThreegppCdr_Timestamp struct {
	Month uint64
	Date uint64
	Hour uint64
	Minute uint64
	Sign bool
	HourDeviation uint64
	MinuteDeviation uint64
	_io *kaitai.Stream
	_root *ThreegppCdr
	_parent *ThreegppCdr_Header
}
func NewThreegppCdr_Timestamp() *ThreegppCdr_Timestamp {
	return &ThreegppCdr_Timestamp{
	}
}

func (this *ThreegppCdr_Timestamp) Read(io *kaitai.Stream, parent *ThreegppCdr_Header, root *ThreegppCdr) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp4, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.Month = tmp4
	tmp5, err := this._io.ReadBitsIntBe(5)
	if err != nil {
		return err
	}
	this.Date = tmp5
	tmp6, err := this._io.ReadBitsIntBe(5)
	if err != nil {
		return err
	}
	this.Hour = tmp6
	tmp7, err := this._io.ReadBitsIntBe(6)
	if err != nil {
		return err
	}
	this.Minute = tmp7
	tmp8, err := this._io.ReadBitsIntBe(1)
	if err != nil {
		return err
	}
	this.Sign = tmp8 != 0
	tmp9, err := this._io.ReadBitsIntBe(5)
	if err != nil {
		return err
	}
	this.HourDeviation = tmp9
	tmp10, err := this._io.ReadBitsIntBe(6)
	if err != nil {
		return err
	}
	this.MinuteDeviation = tmp10
	return err
}

type ThreegppCdr_ReleaseVersionIdentifier_Rel int
const (
	ThreegppCdr_ReleaseVersionIdentifier_Rel__R99 ThreegppCdr_ReleaseVersionIdentifier_Rel = 0
	ThreegppCdr_ReleaseVersionIdentifier_Rel__R4 ThreegppCdr_ReleaseVersionIdentifier_Rel = 1
	ThreegppCdr_ReleaseVersionIdentifier_Rel__R5 ThreegppCdr_ReleaseVersionIdentifier_Rel = 2
	ThreegppCdr_ReleaseVersionIdentifier_Rel__R6 ThreegppCdr_ReleaseVersionIdentifier_Rel = 3
	ThreegppCdr_ReleaseVersionIdentifier_Rel__R7 ThreegppCdr_ReleaseVersionIdentifier_Rel = 4
	ThreegppCdr_ReleaseVersionIdentifier_Rel__R8 ThreegppCdr_ReleaseVersionIdentifier_Rel = 5
	ThreegppCdr_ReleaseVersionIdentifier_Rel__R9 ThreegppCdr_ReleaseVersionIdentifier_Rel = 6
	ThreegppCdr_ReleaseVersionIdentifier_Rel__Beyond9 ThreegppCdr_ReleaseVersionIdentifier_Rel = 7
)
type ThreegppCdr_ReleaseVersionIdentifier struct {
	ReleaseIdentifier uint64
	VersionIdentifier uint64
	_io *kaitai.Stream
	_root *ThreegppCdr
	_parent interface{}
	_f_threegppRelease bool
	threegppRelease ThreegppCdr_ReleaseVersionIdentifier_Rel
}
func NewThreegppCdr_ReleaseVersionIdentifier() *ThreegppCdr_ReleaseVersionIdentifier {
	return &ThreegppCdr_ReleaseVersionIdentifier{
	}
}

func (this *ThreegppCdr_ReleaseVersionIdentifier) Read(io *kaitai.Stream, parent interface{}, root *ThreegppCdr) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp11, err := this._io.ReadBitsIntBe(3)
	if err != nil {
		return err
	}
	this.ReleaseIdentifier = tmp11
	tmp12, err := this._io.ReadBitsIntBe(5)
	if err != nil {
		return err
	}
	this.VersionIdentifier = tmp12
	return err
}
func (this *ThreegppCdr_ReleaseVersionIdentifier) ThreegppRelease() (v ThreegppCdr_ReleaseVersionIdentifier_Rel, err error) {
	if (this._f_threegppRelease) {
		return this.threegppRelease, nil
	}
	this.threegppRelease = ThreegppCdr_ReleaseVersionIdentifier_Rel(ThreegppCdr_ReleaseVersionIdentifier_Rel((0 + this.ReleaseIdentifier)))
	this._f_threegppRelease = true
	return this.threegppRelease, nil
}
type ThreegppCdr_IpAddress struct {
	IpAddress string
	_io *kaitai.Stream
	_root *ThreegppCdr
	_parent *ThreegppCdr_Header
}
func NewThreegppCdr_IpAddress() *ThreegppCdr_IpAddress {
	return &ThreegppCdr_IpAddress{
	}
}

func (this *ThreegppCdr_IpAddress) Read(io *kaitai.Stream, parent *ThreegppCdr_Header, root *ThreegppCdr) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp13, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp13 = tmp13
	this.IpAddress = string(tmp13)
	return err
}

type ThreegppCdr_ReleaseIdentifierExtension_Rel int
const (
	ThreegppCdr_ReleaseIdentifierExtension_Rel__R10 ThreegppCdr_ReleaseIdentifierExtension_Rel = 0
	ThreegppCdr_ReleaseIdentifierExtension_Rel__R11 ThreegppCdr_ReleaseIdentifierExtension_Rel = 1
	ThreegppCdr_ReleaseIdentifierExtension_Rel__R12 ThreegppCdr_ReleaseIdentifierExtension_Rel = 2
	ThreegppCdr_ReleaseIdentifierExtension_Rel__R13 ThreegppCdr_ReleaseIdentifierExtension_Rel = 3
	ThreegppCdr_ReleaseIdentifierExtension_Rel__R14 ThreegppCdr_ReleaseIdentifierExtension_Rel = 4
	ThreegppCdr_ReleaseIdentifierExtension_Rel__R15 ThreegppCdr_ReleaseIdentifierExtension_Rel = 5
	ThreegppCdr_ReleaseIdentifierExtension_Rel__R16 ThreegppCdr_ReleaseIdentifierExtension_Rel = 6
)
type ThreegppCdr_ReleaseIdentifierExtension struct {
	ThreegppRelease ThreegppCdr_ReleaseIdentifierExtension_Rel
	_io *kaitai.Stream
	_root *ThreegppCdr
	_parent interface{}
}
func NewThreegppCdr_ReleaseIdentifierExtension() *ThreegppCdr_ReleaseIdentifierExtension {
	return &ThreegppCdr_ReleaseIdentifierExtension{
	}
}

func (this *ThreegppCdr_ReleaseIdentifierExtension) Read(io *kaitai.Stream, parent interface{}, root *ThreegppCdr) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp14, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ThreegppRelease = ThreegppCdr_ReleaseIdentifierExtension_Rel(tmp14)
	return err
}

type ThreegppCdr_Cdr_Encoding int
const (
	ThreegppCdr_Cdr_Encoding__Ber ThreegppCdr_Cdr_Encoding = 1
	ThreegppCdr_Cdr_Encoding__UnalignedPer ThreegppCdr_Cdr_Encoding = 2
	ThreegppCdr_Cdr_Encoding__AlignedPer ThreegppCdr_Cdr_Encoding = 3
	ThreegppCdr_Cdr_Encoding__Xml ThreegppCdr_Cdr_Encoding = 4
)

type ThreegppCdr_Cdr_Ts int
const (
	ThreegppCdr_Cdr_Ts__Number32005 ThreegppCdr_Cdr_Ts = 0
	ThreegppCdr_Cdr_Ts__Number32015 ThreegppCdr_Cdr_Ts = 1
	ThreegppCdr_Cdr_Ts__Number32205 ThreegppCdr_Cdr_Ts = 2
	ThreegppCdr_Cdr_Ts__Number32215 ThreegppCdr_Cdr_Ts = 3
	ThreegppCdr_Cdr_Ts__Number32225 ThreegppCdr_Cdr_Ts = 4
	ThreegppCdr_Cdr_Ts__Number32235 ThreegppCdr_Cdr_Ts = 5
	ThreegppCdr_Cdr_Ts__Number32250 ThreegppCdr_Cdr_Ts = 6
	ThreegppCdr_Cdr_Ts__Number32251 ThreegppCdr_Cdr_Ts = 7
	ThreegppCdr_Cdr_Ts__Number32260 ThreegppCdr_Cdr_Ts = 9
	ThreegppCdr_Cdr_Ts__Number32270 ThreegppCdr_Cdr_Ts = 10
	ThreegppCdr_Cdr_Ts__Number32271 ThreegppCdr_Cdr_Ts = 11
	ThreegppCdr_Cdr_Ts__Number32272 ThreegppCdr_Cdr_Ts = 12
	ThreegppCdr_Cdr_Ts__Number32273 ThreegppCdr_Cdr_Ts = 13
	ThreegppCdr_Cdr_Ts__Number32275 ThreegppCdr_Cdr_Ts = 14
	ThreegppCdr_Cdr_Ts__Number32274 ThreegppCdr_Cdr_Ts = 15
	ThreegppCdr_Cdr_Ts__Number32277 ThreegppCdr_Cdr_Ts = 16
	ThreegppCdr_Cdr_Ts__Number32296 ThreegppCdr_Cdr_Ts = 17
	ThreegppCdr_Cdr_Ts__Number32278 ThreegppCdr_Cdr_Ts = 18
	ThreegppCdr_Cdr_Ts__Number32253 ThreegppCdr_Cdr_Ts = 19
	ThreegppCdr_Cdr_Ts__Number32255 ThreegppCdr_Cdr_Ts = 20
	ThreegppCdr_Cdr_Ts__Number32254 ThreegppCdr_Cdr_Ts = 21
	ThreegppCdr_Cdr_Ts__Number32256 ThreegppCdr_Cdr_Ts = 22
	ThreegppCdr_Cdr_Ts__Number28201 ThreegppCdr_Cdr_Ts = 23
	ThreegppCdr_Cdr_Ts__Number28202 ThreegppCdr_Cdr_Ts = 24
)
type ThreegppCdr_Cdr struct {
	CdrLength uint16
	Version *ThreegppCdr_ReleaseVersionIdentifier
	DataRecordFormat uint64
	TsNumber ThreegppCdr_Cdr_Ts
	ReleaseIdentifierExtension *ThreegppCdr_ReleaseIdentifierExtension
	CdrContent []byte
	_io *kaitai.Stream
	_root *ThreegppCdr
	_parent *ThreegppCdr
	_f_cdrEncoding bool
	cdrEncoding ThreegppCdr_Cdr_Encoding
}
func NewThreegppCdr_Cdr() *ThreegppCdr_Cdr {
	return &ThreegppCdr_Cdr{
	}
}

func (this *ThreegppCdr_Cdr) Read(io *kaitai.Stream, parent *ThreegppCdr, root *ThreegppCdr) (err error) {
	this._io = io
	this._parent = parent
	this._root = root
	this.CdrLength , err = this._io.ReadU2be()
	if err != nil {
		return err
	}
	fmt.Printf("CDR Length: %d\n", this.CdrLength)
	tmp16 := NewThreegppCdr_ReleaseVersionIdentifier()
	err = tmp16.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Version = tmp16
	tmp17, err := this._io.ReadBitsIntBe(3)
	if err != nil {
		return err
	}
	this.DataRecordFormat = tmp17
	tmp18, err := this._io.ReadBitsIntBe(5)
	if err != nil {
		return err
	}
	this.TsNumber = ThreegppCdr_Cdr_Ts(tmp18)
	this._io.AlignToByte()
	tmp19 := NewThreegppCdr_ReleaseIdentifierExtension()
	err = tmp19.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.ReleaseIdentifierExtension = tmp19
	tmp20, err := this._io.ReadBytes(int(this.CdrLength))
	if err != nil {
		return err
	}
	this.CdrContent = tmp20
	return err
}
func (this *ThreegppCdr_Cdr) CdrEncoding() (v ThreegppCdr_Cdr_Encoding, err error) {
	if (this._f_cdrEncoding) {
		return this.cdrEncoding, nil
	}
	this.cdrEncoding = ThreegppCdr_Cdr_Encoding(ThreegppCdr_Cdr_Encoding((0 + this.DataRecordFormat)))
	this._f_cdrEncoding = true
	return this.cdrEncoding, nil
}
type ThreegppCdr_Header struct {
	FileLength uint32
	HeaderLength uint32
	HighReleaseVersionIdentifier *ThreegppCdr_ReleaseVersionIdentifier
	LowReleaseVersionIdentifier *ThreegppCdr_ReleaseVersionIdentifier
	FileOpeningTimestamp *ThreegppCdr_Timestamp
	LastCdrAppendTimestamp *ThreegppCdr_Timestamp
	NumberOfCdrsInFile uint32
	FileSequenceNumber uint32
	FileClosureTriggerReason uint8
	NodeIpAddress *ThreegppCdr_IpAddress
	LostCdrIndicator uint8
	LengthOfCdrRouteingFilter uint16
	CdrRouteingFilter string
	LengthOfPrivateExtension uint16
	PrivateExtension string
	HighReleaseIdentifierExtension *ThreegppCdr_ReleaseIdentifierExtension
	LowReleaseIdentifierExtension *ThreegppCdr_ReleaseIdentifierExtension
	_io *kaitai.Stream
	_root *ThreegppCdr
	_parent *ThreegppCdr
}
func NewThreegppCdr_Header() *ThreegppCdr_Header {
	return &ThreegppCdr_Header{
	}
}

func (this *ThreegppCdr_Header) Read(io *kaitai.Stream, parent *ThreegppCdr, root *ThreegppCdr) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp21, err := this._io.ReadU4be()
	if err != nil {
		return err
	}
	this.FileLength = uint32(tmp21)
	tmp22, err := this._io.ReadU4be()
	if err != nil {
		return err
	}
	this.HeaderLength = uint32(tmp22)
	tmp23 := NewThreegppCdr_ReleaseVersionIdentifier()
	err = tmp23.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.HighReleaseVersionIdentifier = tmp23
	tmp24 := NewThreegppCdr_ReleaseVersionIdentifier()
	err = tmp24.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.LowReleaseVersionIdentifier = tmp24

	tmp25 := NewThreegppCdr_Timestamp()
	err = tmp25.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.FileOpeningTimestamp = tmp25
	tmp26 := NewThreegppCdr_Timestamp()
	err = tmp26.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.LastCdrAppendTimestamp = tmp26
	tmp27, err := this._io.ReadU4be()
	if err != nil {
		return err
	}
	this.NumberOfCdrsInFile = uint32(tmp27)
	tmp28, err := this._io.ReadU4be()
	if err != nil {
		return err
	}
	this.FileSequenceNumber = uint32(tmp28)
	tmp29, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.FileClosureTriggerReason = tmp29
	tmp30 := NewThreegppCdr_IpAddress()
	err = tmp30.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.NodeIpAddress = tmp30
	tmp31, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.LostCdrIndicator = tmp31
	tmp32, err := this._io.ReadU2be()
	if err != nil {
		return err
	}
	this.LengthOfCdrRouteingFilter = uint16(tmp32)
	tmp33, err := this._io.ReadBytes(int(this.LengthOfCdrRouteingFilter))
	if err != nil {
		return err
	}
	tmp33 = tmp33
	this.CdrRouteingFilter = string(tmp33)
	tmp34, err := this._io.ReadU2be()
	if err != nil {
		return err
	}
	this.LengthOfPrivateExtension = tmp34
	tmp35, err := this._io.ReadBytes(int(this.LengthOfPrivateExtension))
	if err != nil {
		return err
	}
	this.PrivateExtension = string(tmp35)
	tmp36 := NewThreegppCdr_ReleaseIdentifierExtension()
	err = tmp36.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.HighReleaseIdentifierExtension = tmp36
	tmp37 := NewThreegppCdr_ReleaseIdentifierExtension()
	err = tmp37.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.LowReleaseIdentifierExtension = tmp37
	return err
}
